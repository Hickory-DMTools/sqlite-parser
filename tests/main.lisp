(defpackage #:sqlite-parser/tests
  (:use #:cl #:5am #:sqlite-parser #:fiveam)
  (:import-from #:esrap #:parse)
  (:local-nicknames (#:x #:sqlite-parser)))

(in-package #:sqlite-parser/tests)

(def-suite :sqlite-parser)
(in-suite :sqlite-parser)

(defmacro is-literal (form expected)
  `(is (equalp (parse 'x::literal-value ,form) ,expected)))

(defmacro literal-error (form)
  `(signals (error "~S should error" ',form) (parse 'x::literal-value ,form)))

(test literal-constants ()
  (is-literal "null"              :null)
  (is-literal "Null"              :null)
  (is-literal "true"              :true)
  (is-literal "tRue"              :true)
  (is-literal "false"             :false)
  (is-literal "faLse"             :false)
  (is-literal "current_date"      :current-date)
  (is-literal "curRent_date"      :current-date)
  (is-literal "current_time"      :current-time)
  (is-literal "currEnt_time"      :current-time)
  (is-literal "current_timestamp" :current-timestamp)
  (is-literal "curreNt_timestamp" :current-timestamp)
  (literal-error "current date")
  (literal-error "current time")
  (literal-error "current timestamp"))

(test numeric-literal ()
  (is-literal "1"        '(:number-literal . "1"))
  (is-literal "1."       '(:number-literal . "1."))
  (is-literal "1.2"      '(:number-literal . "1.2"))
  (is-literal "1.e2"     '(:number-literal . "1.e2"))
  (is-literal "1.e+2"    '(:number-literal . "1.e+2"))
  (is-literal "1.e-2"    '(:number-literal . "1.e-2"))
  (is-literal "1.2e2"    '(:number-literal . "1.2e2"))
  (is-literal "1.2e+2"   '(:number-literal . "1.2e+2"))
  (is-literal "1.2e-2"   '(:number-literal . "1.2e-2"))
  (is-literal ".2"       '(:number-literal . ".2"))
  (is-literal ".2e2"     '(:number-literal . ".2e2"))
  (is-literal ".2e+2"    '(:number-literal . ".2e+2"))
  (is-literal ".2e-2"    '(:number-literal . ".2e-2"))
  (is-literal "0xabcfef" '(:number-literal . "0xabcfef"))
  (literal-error "0xabcdefg")
  (literal-error "0x")
  (literal-error "0x.")
  (literal-error "0x.2")
  (literal-error "0x2.")
  (literal-error "0x2.2")
  (literal-error "0x2.2e2")
  (literal-error "0x2.2e+2")
  (literal-error "0x2.2e-2"))

(test string-literal
  (is-literal "'foo'" '(:string-literal . "foo"))
  (is-literal "'foo''bar'" '(:string-literal . "foo'bar"))
  (literal-error "'foo")
  (literal-error "'foo''")
  (literal-error "'foo''bar"))

(test blob-literal
  (is-literal "x'abcdef'" '(:blob-literal . "abcdef"))
  (is-literal "x'abcdef1234567890'" '(:blob-literal . "abcdef1234567890"))
  (literal-error "x'abcdef")
  (literal-error "x'abcdefg")
  (literal-error "x'abcdefg'"))
